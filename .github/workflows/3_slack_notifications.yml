name: Android Cached Build Example 3
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

## List the steps to be executed by the workflow
jobs:
  ## Set the name of the job
  myBuildExample:
    runs-on: ubuntu-latest
    
    ## Define a sequence of steps to be executed 
    steps:
      - name: Checkout
        uses: actions/checkout@v2
     
       ## cache is a marketplace action that can be used to save
       ## files needed for a build, like dependencies, 
       ## so that you don't have to reload them each time we are going to build our app
      - name: Restore Cache
        uses: actions/cache@v2  ##see the documentation on github marketplace
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

       ## Executes the `./gradlew test` command
      - name: Run Tests
        run: ./gradlew test
     
      ## Executes the `./gradlew assemble` command to run the app
      - name: Build Project
        run: ./gradlew assemble

      - name: Send notification to slack	
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: commit,ref,workflow,eventName
          author_name: ${{ github.actor }}
          icon_emoji: ':robot_face:'
          username: "Pull Request Build Status"
          text: |
            ${{ job.status }}:
            https://github.com/n8ebel/GitHubActionsAutomationSandbox/actions/runs/${{ github.run_id }}
          if: always() # Pick up events even if the job fails or is canceled.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUBREPO_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }} # required
